' ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
'< Signal handler generated by utility                       GladeToBac V3.4.1 >
'< Signal-Modul erzeugt von                                                    >
'< Generated at / Generierung am                             2015-01-26, 19:45 >
' -----------------------------------------------------------------------------
'< Main/Haupt Program name: main.bas                                           >
'< Author:  SARG, AGS, TJF                                                     >
'<  Email:  Thomas.Freiherr@gmx.net                                            >
' -----------------------------------------------------------------------------
'< callback SUB/FUNCTION                                          insert code! >
'< Ereignis Unterprogramm/Funktion                        Quelltext einfuegen! >
' vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
SUB on_entry_icon_load CDECL ALIAS "on_entry_icon_load" ( _
  BYVAL entry AS GtkEntry PTR, _
  BYVAL icon_pos AS GtkEntryIconPosition, _
  BYVAL event AS GdkEvent PTR, _
  BYVAL user_data AS gpointer) EXPORT

  VAR dia = gtk_file_chooser_dialog_new(*__("Select file"), NULL _
    , GTK_FILE_CHOOSER_ACTION_OPEN _
    , "gtk-cancel", GTK_RESPONSE_CANCEL _
    , "gtk-ok", GTK_RESPONSE_ACCEPT _
    , NULL)

  #IFNDEF __FB_UNIX__
    VAR filter = gtk_file_filter_new() '  don't free, dia take ownership
    gtk_file_filter_set_name(filter, *__("Executables (*.exe)"))
    gtk_file_filter_add_pattern(filter, "*.exe")
    gtk_file_chooser_add_filter(GTK_FILE_CHOOSER(dia), filter)
  #ENDIF

  IF GTK_RESPONSE_ACCEPT = gtk_dialog_run(GTK_DIALOG(dia)) THEN
    VAR fnam = gtk_file_chooser_get_filename(GTK_FILE_CHOOSER(dia))
    gtk_entry_set_text(entry, fnam)
    g_free(fnam)
  END IF

  gtk_widget_destroy(dia)

END SUB
